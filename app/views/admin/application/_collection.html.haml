%table{"aria-labelledby" => table_title, "data-action" => "click->table#visitDataUrl keydown->table#visitDataUrl", "data-controller" => "table"}
  %thead
    %tr
      - collection_presenter.attribute_types.each do |attr_name, attr_type|
        %th{"aria-sort" => "#{sort_order(collection_presenter.ordered_html_class(attr_name))}", :class => "cell-label         cell-label--#{attr_type.html_class}         cell-label--#{collection_presenter.ordered_html_class(attr_name)}         cell-label--#{"#{collection_presenter.resource_name}_#{attr_name}"}", :scope => "col"}
          = link_to(sanitized_order_params(page, collection_field_name).merge(             |
              collection_presenter.order_params_for(attr_name, key: collection_field_name) |
            )) do                                                                          |
            = t(                                                                  |
                helpers.label.#{collection_presenter.resource_name}.#{attr_name}, |
                default: resource_class.human_attribute_name(attr_name).titleize, |
              )                                                                   |
            - if collection_presenter.ordered_by?(attr_name)
              %span{:class => "cell-label__sort-indicator cell-label__sort-indicator--#{collection_presenter.ordered_html_class(attr_name)}"}
                %svg{"aria-hidden" => "true"}
                  %use{"xlink:href" => "#icon-up-caret"}
      = render(                                       |
          collection_header_actions,                  |
          collection_presenter: collection_presenter, |
          page: page,                                 |
          resources: resources,                       |
          table_title: page-title                     |
        )                                             |
  %tbody
    - resources.each do |resource|
      %tr.js-table-row
      - if accessible_action?(resource, :show)
        = %(tabindex=0 role=link data-url=#{polymorphic_path([namespace, resource])})
      \&gt;
      - collection_presenter.attributes_for(resource).each do |attribute|
        %td{:class => "cell-data cell-data--#{attribute.html_class}"}
          - if accessible_action?(resource, :show)
            %a.action-show{:href => "#{polymorphic_path([namespace, resource])}", :tabindex => "-1"}
              = render_field attribute
          - else
            = render_field attribute
      = render(                                         |
          collection_item_actions,                      |
          collection_presenter: collection_presenter,   |
          collection_field_name: collection_field_name, |
          page: page,                                   |
          namespace: namespace,                         |
          resource: resource,                           |
          table_title: page-title                       |
        )                                               |
